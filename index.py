import tkinter as tk
from tkinter import Label, ttk
from PIL import Image, ImageTk
import os

# L·∫•y ƒë∆∞·ªùng d·∫´n th∆∞ m·ª•c hi·ªán t·∫°i
current_dir = os.path.dirname(os.path.abspath(__file__))

# S·ª≠ d·ª•ng os.path.join ƒë·ªÉ t·∫°o ƒë∆∞·ªùng d·∫´n ƒë·∫ßy ƒë·ªß
logo_path = os.path.join(current_dir, "logo-python.png")
building_path = os.path.join(current_dir, "building.jpg")

def show_index():
    root = tk.Tk()
    root.title("H·ªá th·ªëng Qu·∫£n l√Ω T√≤a nh√†")
    root.geometry("1200x700")
    
    # Thi·∫øt l·∫≠p theme cho ttk
    style = ttk.Style()
    style.theme_use('clam')  # S·ª≠ d·ª•ng theme clam cho giao di·ªán hi·ªán ƒë·∫°i
    style.configure('TButton', font=('Arial', 12), background='#4096FF', foreground='white')
    style.configure('TLabel', font=('Arial', 11))
    style.configure('Header.TLabel', font=('Arial', 14, 'bold'), foreground='#001F54')
    style.configure('Title.TLabel', font=('Arial', 28, 'bold'), foreground='#001F54')
    style.configure('Subtitle.TLabel', font=('Arial', 14), foreground='#707070')
    style.configure('Feature.TFrame', background='#F8F9FA', relief='ridge', borderwidth=1)
    
    # L·∫•y k√≠ch th∆∞·ªõc m√†n h√¨nh v√† cƒÉn gi·ªØa c·ª≠a s·ªï
    screen_width = root.winfo_screenwidth()
    screen_height = root.winfo_screenheight()
    window_width = 1200
    window_height = 700
    x_position = (screen_width - window_width) // 2
    y_position = (screen_height - window_height) // 2
    root.geometry(f"{window_width}x{window_height}+{x_position}+{y_position}")
    
    # T·∫°o Frame cho ph·∫ßn header v·ªõi m√†u n·ªÅn
    header_frame = tk.Frame(root, height=100, bg="#F8F9FA")
    header_frame.pack(fill="x", padx=0, pady=0)
    
    # T·∫°o ƒë∆∞·ªùng vi·ªÅn d∆∞·ªõi header
    separator = ttk.Separator(root, orient='horizontal')
    separator.pack(fill='x', pady=0)
    
    # Ph·∫ßn Logo
    try:
        image = Image.open(logo_path)
        image = image.resize((60, 60))
        logo_image = ImageTk.PhotoImage(image)
        
        logo_label = Label(header_frame, image=logo_image, bg="#F8F9FA")
        logo_label.pack(side="left", padx=20, pady=10)
        logo_label.image = logo_image
        
        # Th√™m t√™n ·ª©ng d·ª•ng b√™n c·∫°nh logo
        app_name = Label(header_frame, text="BUILDING MANAGEMENT", font=("Arial", 18, "bold"), fg="#001F54", bg="#F8F9FA")
        app_name.pack(side="left", padx=5)
    except Exception as e:
        print(f"L·ªói khi t·∫£i logo: {e}")
        app_name = Label(header_frame, text="BUILDING MANAGEMENT", font=("Arial", 18, "bold"), fg="#001F54", bg="#F8F9FA")
        app_name.pack(side="left", padx=20)
    
    # T·∫°o Frame cho n·ªôi dung ch√≠nh v·ªõi m√†u n·ªÅn
    current_content_frame = tk.Frame(root, bg="white")
    current_content_frame.pack(fill="both", expand=True, padx=0, pady=0)

    # C√°c h√†m hi·ªÉn th·ªã n·ªôi dung
    def show_homepage_content():
        for widget in current_content_frame.winfo_children():
            widget.destroy()
        
        # Container ch√≠nh v·ªõi padding
        main_container = tk.Frame(current_content_frame, bg="white")
        main_container.pack(fill="both", expand=True, padx=40, pady=20)
        
        # Banner section - Ti√™u ƒë·ªÅ tr∆∞·ªõc, ·∫£nh sau
        banner_frame = tk.Frame(main_container, bg="white")
        banner_frame.pack(fill="x", pady=10)
        
        # Ti√™u ƒë·ªÅ trang ch·ªß
        title_label = ttk.Label(banner_frame, text="Ch√†o m·ª´ng ƒë·∫øn v·ªõi H·ªá th·ªëng Qu·∫£n l√Ω T√≤a nh√†",
                              style="Title.TLabel")
        title_label.pack(pady=(10, 5))
        
        subtitle_label = ttk.Label(banner_frame, text="Gi·∫£i ph√°p to√†n di·ªán cho vi·ªác qu·∫£n l√Ω b·∫•t ƒë·ªông s·∫£n c·ªßa b·∫°n",
                                 style="Subtitle.TLabel")
        subtitle_label.pack(pady=5)
        
        # N√∫t CTA l·ªõn
        cta_button = tk.Button(banner_frame, text="B·∫ÆT ƒê·∫¶U NGAY", bg="#4096FF", fg="white",
                              font=("Arial", 14, "bold"), padx=30, pady=10, relief="flat",
                              cursor="hand2", state="disabled")
        cta_button.pack(pady=20)
        
        # T·∫°o m·ªôt ƒë∆∞·ªùng ph√¢n c√°ch nh·∫π
        separator = ttk.Separator(main_container, orient='horizontal')
        separator.pack(fill='x', pady=10)
        
        # H√¨nh ·∫£nh ch√≠nh - ƒë·∫∑t trong container ri√™ng
        image_section = tk.Frame(main_container, bg="white")
        image_section.pack(fill="x", pady=20)
        
        try:
            main_image = Image.open(building_path)
            main_image = main_image.resize((800, 400), Image.LANCZOS)
            main_photo = ImageTk.PhotoImage(main_image)
            
            # T·∫°o frame ch·ª©a ·∫£nh v·ªõi vi·ªÅn v√† b√≥ng
            image_container = tk.Frame(image_section, bd=1, relief="solid", bg="white")
            image_container.pack(pady=10)
            
            image_label = tk.Label(image_container, image=main_photo, bd=0)
            image_label.image = main_photo
            image_label.pack()
            
            # Th√™m ch√∫ th√≠ch d∆∞·ªõi ·∫£nh
            caption = ttk.Label(image_section, text="T√≤a nh√† hi·ªán ƒë·∫°i v·ªõi ƒë·∫ßy ƒë·ªß ti·ªán nghi", 
                              style="Subtitle.TLabel", font=("Arial", 12, "italic"))
            caption.pack(pady=5)
        except Exception as e:
            print(f"L·ªói khi t·∫£i ·∫£nh ch√≠nh: {e}")
            ttk.Label(image_section, text="[·∫¢nh minh h·ªça t√≤a nh√†]", font=("Arial", 18)).pack(pady=20)
        
        # T·∫°o m·ªôt ƒë∆∞·ªùng ph√¢n c√°ch kh√°c
        separator2 = ttk.Separator(main_container, orient='horizontal')
        separator2.pack(fill='x', pady=10)
        
        # Ph·∫ßn gi·ªõi thi·ªáu v·ªÅ d·ª± √°n
        intro_section = tk.Frame(main_container, bg="white")
        intro_section.pack(fill="x", pady=20)
        
        intro_title = ttk.Label(intro_section, text="V·ªÅ D·ª± √Ån C·ªßa Ch√∫ng T√¥i", 
                              style="Header.TLabel", font=("Arial", 20, "bold"))
        intro_title.pack(pady=10)
        
        intro_text = """
        H·ªá th·ªëng Qu·∫£n l√Ω T√≤a nh√† l√† gi·∫£i ph√°p to√†n di·ªán gi√∫p qu·∫£n l√Ω hi·ªáu qu·∫£ c√°c t√≤a nh√†, 
        chung c∆∞ v√† b·∫•t ƒë·ªông s·∫£n th∆∞∆°ng m·∫°i. V·ªõi giao di·ªán th√¢n thi·ªán v√† t√≠nh nƒÉng ƒëa d·∫°ng, 
        ch√∫ng t√¥i cung c·∫•p c√¥ng c·ª• h·ªó tr·ª£ ƒë·∫Øc l·ª±c cho c√°c nh√† qu·∫£n l√Ω, ch·ªß ƒë·∫ßu t∆∞ v√† ban qu·∫£n l√Ω.
        
        H·ªá th·ªëng ƒë∆∞·ª£c ph√°t tri·ªÉn d·ª±a tr√™n nhu c·∫ßu th·ª±c t·∫ø c·ªßa th·ªã tr∆∞·ªùng, mang ƒë·∫øn tr·∫£i nghi·ªám 
        qu·∫£n l√Ω chuy√™n nghi·ªáp v√† hi·ªáu qu·∫£ nh·∫•t.
        """
        
        intro_label = ttk.Label(intro_section, text=intro_text, 
                              style="TLabel", wraplength=800, justify="center")
        intro_label.pack(pady=10)
        
        # Ph·∫ßn t√≠nh nƒÉng n·ªïi b·∫≠t
        features_container = tk.Frame(main_container, bg="white")
        features_container.pack(fill="x", pady=20)
        
        ttk.Label(features_container, text="T√≠nh nƒÉng n·ªïi b·∫≠t", 
                 style="Header.TLabel", font=("Arial", 20, "bold")).pack(pady=10)
        
        # Grid layout cho c√°c t√≠nh nƒÉng
        features_grid = tk.Frame(features_container, bg="white")
        features_grid.pack(pady=20)
        
        features = [
            {"icon": "üè¢", "title": "Qu·∫£n l√Ω t√≤a nh√†", "desc": "Qu·∫£n l√Ω th√¥ng tin chi ti·∫øt v·ªÅ t√≤a nh√†, cƒÉn h·ªô v√† ti·ªán √≠ch"},
            {"icon": "üìä", "title": "B√°o c√°o th·ªëng k√™", "desc": "Xem b√°o c√°o v√† th·ªëng k√™ v·ªÅ t√¨nh tr·∫°ng thu√™, doanh thu"},
            {"icon": "üë•", "title": "Qu·∫£n l√Ω ng∆∞·ªùi thu√™", "desc": "Theo d√µi th√¥ng tin ng∆∞·ªùi thu√™ v√† h·ª£p ƒë·ªìng"},
            {"icon": "üîí", "title": "B·∫£o m·∫≠t cao", "desc": "H·ªá th·ªëng ph√¢n quy·ªÅn v√† b·∫£o m·∫≠t d·ªØ li·ªáu chuy√™n nghi·ªáp"}
        ]
        
        # T·∫°o grid 2x2 cho c√°c t√≠nh nƒÉng
        for i, feature in enumerate(features):
            col = i % 2
            row = i // 2
            
            feature_frame = tk.Frame(features_grid, bg="#F8F9FA", bd=1, relief="solid", width=350, height=150)
            feature_frame.grid(row=row, column=col, padx=15, pady=15, sticky="nsew")
            feature_frame.pack_propagate(False)
            
            icon_label = tk.Label(feature_frame, text=feature["icon"], font=("Arial", 30), bg="#F8F9FA")
            icon_label.pack(pady=(15, 5))
            
            title_label = tk.Label(feature_frame, text=feature["title"], font=("Arial", 14, "bold"), bg="#F8F9FA", fg="#001F54")
            title_label.pack(pady=5)
            
            desc_label = tk.Label(feature_frame, text=feature["desc"], font=("Arial", 11), bg="#F8F9FA", fg="#707070", wraplength=300)
            desc_label.pack(pady=5)
        
        # Ph·∫ßn l·ªùi k√™u g·ªçi h√†nh ƒë·ªông (CTA)
        cta_section = tk.Frame(main_container, bg="#E6F7FF", height=150)
        cta_section.pack(fill="x", pady=30)
        cta_section.pack_propagate(False)
        
        cta_text = ttk.Label(cta_section, text="S·∫µn s√†ng tr·∫£i nghi·ªám h·ªá th·ªëng qu·∫£n l√Ω hi·ªán ƒë·∫°i?", 
                            style="Header.TLabel", font=("Arial", 18, "bold"))
        cta_text.pack(pady=(30, 10))
        
        cta_button2 = tk.Button(cta_section, text="ƒêƒÇNG K√ù NGAY", bg="#52C41A", fg="white",
                               font=("Arial", 14, "bold"), padx=30, pady=10, relief="flat",
                               cursor="hand2", state="disabled")
        cta_button2.pack(pady=10)

    def show_about_us_content():
        for widget in current_content_frame.winfo_children():
            widget.destroy()
        ttk.Label(current_content_frame, text="Gi·ªõi thi·ªáu v·ªÅ ch√∫ng t√¥i", font=("Arial", 28, "bold"), foreground="navy").pack(pady=30)
        about_text_full = ("Ch√∫ng t√¥i l√† m·ªôt ƒë·ªôi ng≈© ph√°t tri·ªÉn t·∫≠n t√¢m, chuy√™n t·∫°o ra c√°c gi·∫£i ph√°p ph·∫ßn m·ªÅm "
                           "ƒë·ªÉ t·ªëi ∆∞u h√≥a quy tr√¨nh qu·∫£n l√Ω b·∫•t ƒë·ªông s·∫£n. V·ªõi nhi·ªÅu nƒÉm kinh nghi·ªám trong lƒ©nh v·ª±c "
                           "ph√°t tri·ªÉn ·ª©ng d·ª•ng desktop v√† t√≠ch h·ª£p API, ch√∫ng t√¥i t·ª± h√†o mang ƒë·∫øn cho kh√°ch h√†ng "
                           "m·ªôt h·ªá th·ªëng qu·∫£n l√Ω t√≤a nh√† m·∫°nh m·∫Ω, an to√†n v√† d·ªÖ s·ª≠ d·ª•ng.\n\n"
                           "M·ª•c ti√™u c·ªßa ch√∫ng t√¥i l√† ƒë∆°n gi·∫£n h√≥a c√°c t√°c v·ª• qu·∫£n l√Ω ph·ª©c t·∫°p, "
                           "gi√∫p c√°c ch·ªß s·ªü h·ªØu, qu·∫£n l√Ω t√≤a nh√† v√† nh√¢n vi√™n c√≥ th·ªÉ t·∫≠p trung "
                           "v√†o c√°c ho·∫°t ƒë·ªông kinh doanh c·ªët l√µi. Ch√∫ng t√¥i lu√¥n l·∫Øng nghe ph·∫£n h·ªìi "
                           "t·ª´ ng∆∞·ªùi d√πng ƒë·ªÉ li√™n t·ª•c c·∫£i thi·ªán v√† ph√°t tri·ªÉn s·∫£n ph·∫©m, ƒë·∫£m b·∫£o r·∫±ng "
                           "h·ªá th·ªëng c·ªßa ch√∫ng t√¥i lu√¥n ƒë√°p ·ª©ng ƒë∆∞·ª£c nhu c·∫ßu ng√†y c√†ng cao c·ªßa th·ªã tr∆∞·ªùng.")
        ttk.Label(current_content_frame, text=about_text_full, wraplength=800, justify="left", font=("Arial", 12)).pack(pady=10, padx=50)

    def show_products_content():
        for widget in current_content_frame.winfo_children():
            widget.destroy()
        ttk.Label(current_content_frame, text="S·∫£n ph·∫©m v√† D·ªãch v·ª•", font=("Arial", 28, "bold"), foreground="navy").pack(pady=30)
        ttk.Label(current_content_frame, text="Ch√∫ng t√¥i cung c·∫•p m·ªôt lo·∫°t c√°c s·∫£n ph·∫©m v√† d·ªãch v·ª• ƒë·ªÉ h·ªó tr·ª£ qu·∫£n l√Ω t√≤a nh√† c·ªßa b·∫°n:",
                  font=("Arial", 14)).pack(pady=10)

        product_frame = ttk.Frame(current_content_frame)
        product_frame.pack(pady=20, padx=50, fill="x")

        products = [
            ("H·ªá th·ªëng Qu·∫£n l√Ω T√≤a nh√† Desktop", "·ª®ng d·ª•ng tr√™n m√°y t√≠nh v·ªõi ƒë·∫ßy ƒë·ªß t√≠nh nƒÉng qu·∫£n l√Ω c∆° b·∫£n."),
            ("Module Qu·∫£n l√Ω H·ª£p ƒë·ªìng", "D·ªÖ d√†ng theo d√µi v√† qu·∫£n l√Ω c√°c h·ª£p ƒë·ªìng thu√™, gia h·∫°n v√† thanh to√°n."),
            ("Module B√°o c√°o & Th·ªëng k√™", "T·∫°o b√°o c√°o chi ti·∫øt v·ªÅ doanh thu, t√¨nh tr·∫°ng thu√™ v√† c√°c ch·ªâ s·ªë kh√°c."),
            ("H·ªó tr·ª£ Kh√°ch h√†ng 24/7", "ƒê·ªôi ng≈© h·ªó tr·ª£ chuy√™n nghi·ªáp s·∫µn s√†ng gi·∫£i ƒë√°p m·ªçi th·∫Øc m·∫Øc c·ªßa b·∫°n.")
        ]

        for title, desc in products:
            item_frame = ttk.Frame(product_frame, relief="solid", borderwidth=1, padding="10 10 10 10")
            item_frame.pack(fill="x", pady=10)
            ttk.Label(item_frame, text=title, font=("Arial", 16, "bold"), foreground="darkblue").pack(anchor="w")
            ttk.Label(item_frame, text=desc, wraplength=700, font=("Arial", 11)).pack(anchor="w", pady=5)

    def show_news_content():
        for widget in current_content_frame.winfo_children():
            widget.destroy()
        ttk.Label(current_content_frame, text="Tin t·ª©c v√† S·ª± ki·ªán", font=("Arial", 28, "bold"), foreground="navy").pack(pady=30)
        ttk.Label(current_content_frame, text="C·∫≠p nh·∫≠t nh·ªØng tin t·ª©c m·ªõi nh·∫•t v·ªÅ ng√†nh qu·∫£n l√Ω b·∫•t ƒë·ªông s·∫£n v√† c√°c c·∫£i ti·∫øn c·ªßa ch√∫ng t√¥i.",
                  font=("Arial", 14)).pack(pady=10)

        news_items = [
            ("N√¢ng c·∫•p giao di·ªán ng∆∞·ªùi d√πng", "Ch√∫ng t√¥i ƒë√£ ph√°t h√†nh b·∫£n c·∫≠p nh·∫≠t m·ªõi v·ªõi giao di·ªán th√¢n thi·ªán h∆°n v√† hi·ªáu su·∫•t ƒë∆∞·ª£c c·∫£i thi·ªán. Chi ti·∫øt...", "2024-05-15"),
            ("Workshop qu·∫£n l√Ω t√≤a nh√† hi·ªáu qu·∫£", "Tham gia bu·ªïi workshop tr·ª±c tuy·∫øn c·ªßa ch√∫ng t√¥i ƒë·ªÉ t√¨m hi·ªÉu c√°c m·∫πo qu·∫£n l√Ω t√≤a nh√† chuy√™n nghi·ªáp. ƒêƒÉng k√Ω ngay...", "2024-04-28"),
            ("T√≠ch h·ª£p API thanh to√°n m·ªõi", "H·ªá th·ªëng gi·ªù ƒë√¢y h·ªó tr·ª£ t√≠ch h·ª£p v·ªõi c√°c c·ªïng thanh to√°n ph·ªï bi·∫øn, gi√∫p qu√° tr√¨nh thu ph√≠ d·ªÖ d√†ng h∆°n. T√¨m hi·ªÉu th√™m...", "2024-04-01")
        ]

        news_frame = ttk.Frame(current_content_frame, padding="10 10 10 10")
        news_frame.pack(pady=20, padx=50, fill="x")

        for title, desc, date in news_items:
            news_item_frame = ttk.Frame(news_frame, relief="solid", borderwidth=1, padding="10 10 10 10")
            news_item_frame.pack(fill="x", pady=10)
            ttk.Label(news_item_frame, text=title, font=("Arial", 16, "bold"), foreground="chocolate").pack(anchor="w")
            ttk.Label(news_item_frame, text=f"Ng√†y: {date}", font=("Arial", 10, "italic")).pack(anchor="w")
            ttk.Label(news_item_frame, text=desc, wraplength=700, font=("Arial", 11)).pack(anchor="w", pady=5)

    def show_contact_content():
        for widget in current_content_frame.winfo_children():
            widget.destroy()
        ttk.Label(current_content_frame, text="Li√™n h·ªá ch√∫ng t√¥i", font=("Arial", 28, "bold"), foreground="navy").pack(pady=30)
        ttk.Label(current_content_frame, text="Ch√∫ng t√¥i lu√¥n s·∫µn l√≤ng l·∫Øng nghe v√† h·ªó tr·ª£ b·∫°n.",
                  font=("Arial", 14)).pack(pady=10)

        contact_info_frame = ttk.Frame(current_content_frame, padding="15 15 15 15", relief="solid")
        contact_info_frame.pack(pady=20, padx=100, fill="x")

        ttk.Label(contact_info_frame, text="ƒê·ªãa ch·ªâ:", font=("Arial", 12, "bold")).pack(anchor="w", pady=2)
        ttk.Label(contact_info_frame, text="123 ƒê∆∞·ªùng ABC, Qu·∫≠n XYZ, Th√†nh ph·ªë H·ªì Ch√≠ Minh", font=("Arial", 11)).pack(anchor="w")

        ttk.Label(contact_info_frame, text="ƒêi·ªán tho·∫°i:", font=("Arial", 12, "bold")).pack(anchor="w", pady=2)
        ttk.Label(contact_info_frame, text="+84 987 654 321", font=("Arial", 11)).pack(anchor="w")

        ttk.Label(contact_info_frame, text="Email:", font=("Arial", 12, "bold")).pack(anchor="w", pady=2)
        ttk.Label(contact_info_frame, text="info@quanlytoanha.com", font=("Arial", 11)).pack(anchor="w")

        ttk.Label(contact_info_frame, text="Th·ªùi gian l√†m vi·ªác:", font=("Arial", 12, "bold")).pack(anchor="w", pady=2)
        ttk.Label(contact_info_frame, text="Th·ª© Hai - Th·ª© S√°u: 8:00 AM - 5:00 PM", font=("Arial", 11)).pack(anchor="w")

    # Ph·∫ßn Menu ƒëi·ªÅu h∆∞·ªõng
    menu_frame = tk.Frame(header_frame, bg="#F8F9FA")
    menu_frame.pack(side="left", expand=True)
    
    menu_items = [
        ("Trang ch·ªß", show_homepage_content),
        ("Gi·ªõi thi·ªáu", show_about_us_content),
        ("S·∫£n ph·∫©m", show_products_content),
        ("Tin t·ª©c", show_news_content),
        ("Li√™n h·ªá", show_contact_content)
    ]
    for item_text, command_func in menu_items:
        btn = tk.Button(menu_frame, text=item_text, relief="flat", bg="#F8F9FA", fg='#001F54', 
                        font=("Arial", 13, "bold"), command=command_func, bd=0,
                        activebackground="#E6F0FF", activeforeground="#0066CC",
                        padx=18, pady=7, cursor="hand2")
        btn.pack(side="left", padx=12)

    # Ph·∫ßn ƒëƒÉng nh·∫≠p v√† ƒëƒÉng k√Ω (n√∫t ƒëƒÉng nh·∫≠p s·∫Ω m·ªü giao di·ªán login)
    auth_frame = tk.Frame(header_frame, bg="#F8F9FA")
    auth_frame.pack(side="right", padx=30)

    def open_login():
        root.withdraw()
        import login
        login.show_login(root)

    def open_register():
        root.withdraw()
        import resgiter
        resgiter.RegisterForm(root)

    login_btn = tk.Button(auth_frame, text="ƒêƒÉng nh·∫≠p", bg="#4096FF", fg="white", 
                         font=("Arial", 12, "bold"), padx=18, pady=7, relief="flat", cursor="hand2", command=open_login)
    login_btn.pack(side="left", padx=10)
    register_btn = tk.Button(auth_frame, text="ƒêƒÉng k√Ω", bg="#52C41A", fg="white", 
                            font=("Arial", 12, "bold"), padx=18, pady=7, relief="flat", cursor="hand2", command=open_register)
    register_btn.pack(side="left", padx=5)

    # Hi·ªÉn th·ªã n·ªôi dung trang ch·ªß m·∫∑c ƒë·ªãnh khi kh·ªüi ƒë·ªông
    show_homepage_content()

    # Th√™m footer
    footer_frame = tk.Frame(root, height=60, bg="#001F54")
    footer_frame.pack(fill="x", side="bottom")
    
    footer_content = tk.Frame(footer_frame, bg="#001F54")
    footer_content.pack(fill="both", expand=True, padx=20, pady=10)
    
    copyright_label = tk.Label(
        footer_content, 
        text="¬© 2024 H·ªá th·ªëng Qu·∫£n l√Ω T√≤a nh√†. M·ªçi quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.",
        font=("Arial", 11, "italic"), bg="#001F54", fg="white")
    copyright_label.pack(side="left", pady=10)
    
    # Th√™m c√°c li√™n k·∫øt m·∫°ng x√£ h·ªôi ·ªü b√™n ph·∫£i footer
    social_frame = tk.Frame(footer_content, bg="#001F54")
    social_frame.pack(side="right")
    
    social_text = tk.Label(social_frame, text="K·∫øt n·ªëi v·ªõi ch√∫ng t√¥i:", 
                          font=("Arial", 11, "italic"), bg="#001F54", fg="white")
    social_text.pack(side="left", padx=5)
    
    for social, color in zip(["Facebook", "Twitter", "LinkedIn"], ["#1877F3", "#1DA1F2", "#0A66C2"]):
        social_btn = tk.Label(social_frame, text=social, font=("Arial", 11, "bold"), 
                             bg="#001F54", fg=color, cursor="hand2")
        social_btn.pack(side="left", padx=10)
    
    return root

# N·∫øu file n√†y ƒë∆∞·ª£c ch·∫°y tr·ª±c ti·∫øp
if __name__ == "__main__":
    root = show_index()
    root.mainloop()
